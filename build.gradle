plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.team6'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// H2 데이터베이스 의존성 추가
	runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

asciidoctor {
	baseDirFollowsSourceFile()
}

tasks.register('copyApiDocument', Copy) {
    dependsOn asciidoctor
    doFirst {
        delete file("src/main/resources/static/docs")
    }

    from asciidoctor.outputDir
    into file("src/main/resources/static/docs")
}

bootJar {
    dependsOn copyApiDocument
	from("src/main/resources/static/docs") {
		into("static/docs")
	}
}
